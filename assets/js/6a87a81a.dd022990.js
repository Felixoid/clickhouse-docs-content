"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[66878],{3905:function(e,i,t){t.d(i,{Zo:function(){return u},kt:function(){return p}});var r=t(67294);function o(e,i,t){return i in e?Object.defineProperty(e,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[i]=t,e}function n(e,i){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);i&&(r=r.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var i=1;i<arguments.length;i++){var t=null!=arguments[i]?arguments[i]:{};i%2?n(Object(t),!0).forEach((function(i){o(e,i,t[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(t,i))}))}return e}function a(e,i){if(null==e)return{};var t,r,o=function(e,i){if(null==e)return{};var t,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)t=n[r],i.indexOf(t)>=0||(o[t]=e[t]);return o}(e,i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)t=n[r],i.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var i=r.useContext(c),t=i;return e&&(t="function"==typeof e?e(i):l(l({},i),e)),t},u=function(e){var i=s(e.components);return r.createElement(c.Provider,{value:i},e.children)},d={inlineCode:"code",wrapper:function(e){var i=e.children;return r.createElement(r.Fragment,{},i)}},h=r.forwardRef((function(e,i){var t=e.components,o=e.mdxType,n=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),h=s(t),p=o,f=h["".concat(c,".").concat(p)]||h[p]||d[p]||n;return t?r.createElement(f,l(l({ref:i},u),{},{components:t})):r.createElement(f,l({ref:i},u))}));function p(e,i){var t=arguments,o=i&&i.mdxType;if("string"==typeof e||o){var n=t.length,l=new Array(n);l[0]=h;var a={};for(var c in i)hasOwnProperty.call(i,c)&&(a[c]=i[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var s=2;s<n;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},33628:function(e,i,t){t.r(i),t.d(i,{assets:function(){return u},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return d}});var r=t(87462),o=t(63366),n=(t(67294),t(3905)),l=["components"],a={sidebar_position:90,sidebar_label:"Security Changelog"},c="Security Changelog",s={unversionedId:"en/whats-new/security-changelog",id:"en/whats-new/security-changelog",title:"Security Changelog",description:"Fixed in ClickHouse 21.10.2.15, 2021-10-18",source:"@site/docs/en/whats-new/security-changelog.md",sourceDirName:"en/whats-new",slug:"/en/whats-new/security-changelog",permalink:"/docs/en/whats-new/security-changelog",editUrl:"https://github.com/ClickHouse/clickhouse-docs/blob/main/docs/en/whats-new/security-changelog.md",tags:[],version:"current",sidebarPosition:90,frontMatter:{sidebar_position:90,sidebar_label:"Security Changelog"},sidebar:"english",previous:{title:"2017",permalink:"/docs/en/whats-new/changelog/2017"},next:{title:"About Us",permalink:"/docs/en/about-us"}},u={},d=[{value:"Fixed in ClickHouse 21.10.2.15, 2021-10-18",id:"fixed-in-clickhouse-release-21-10-2-215-2021-10-18",level:2},{value:"CVE-2021-43304",id:"cve-2021-43304",level:3},{value:"CVE-2021-43305",id:"cve-2021-43305",level:3},{value:"CVE-2021-42387",id:"cve-2021-42387",level:3},{value:"CVE-2021-42388",id:"cve-2021-42388",level:3},{value:"CVE-2021-42389",id:"cve-2021-42389",level:3},{value:"CVE-2021-42390",id:"cve-2021-42390",level:3},{value:"CVE-2021-42391",id:"cve-2021-42391",level:3},{value:"Fixed in ClickHouse 21.4.3.21, 2021-04-12",id:"fixed-in-clickhouse-release-21-4-3-21-2021-04-12",level:2},{value:"CVE-2021-25263",id:"cve-2021-25263",level:3},{value:"Fixed in ClickHouse Release 19.14.3.3, 2019-09-10",id:"fixed-in-clickhouse-release-19-14-3-3-2019-09-10",level:2},{value:"CVE-2019-15024",id:"cve-2019-15024",level:3},{value:"CVE-2019-16535",id:"cve-2019-16535",level:3},{value:"CVE-2019-16536",id:"cve-2019-16536",level:3},{value:"Fixed in ClickHouse Release 19.13.6.1, 2019-09-20",id:"fixed-in-clickhouse-release-19-13-6-1-2019-09-20",level:2},{value:"CVE-2019-18657",id:"cve-2019-18657",level:3},{value:"Fixed in ClickHouse Release 18.12.13, 2018-09-10",id:"fixed-in-clickhouse-release-18-12-13-2018-09-10",level:2},{value:"CVE-2018-14672",id:"cve-2018-14672",level:3},{value:"Fixed in ClickHouse Release 18.10.3, 2018-08-13",id:"fixed-in-clickhouse-release-18-10-3-2018-08-13",level:2},{value:"CVE-2018-14671",id:"cve-2018-14671",level:3},{value:"Fixed in ClickHouse Release 1.1.54388, 2018-06-28",id:"fixed-in-clickhouse-release-1-1-54388-2018-06-28",level:2},{value:"CVE-2018-14668",id:"cve-2018-14668",level:3},{value:"Fixed in ClickHouse Release 1.1.54390, 2018-07-06",id:"fixed-in-clickhouse-release-1-1-54390-2018-07-06",level:2},{value:"CVE-2018-14669",id:"cve-2018-14669",level:3},{value:"Fixed in ClickHouse Release 1.1.54131, 2017-01-10",id:"fixed-in-clickhouse-release-1-1-54131-2017-01-10",level:2},{value:"CVE-2018-14670",id:"cve-2018-14670",level:3}],h={toc:d};function p(e){var i=e.components,t=(0,o.Z)(e,l);return(0,n.kt)("wrapper",(0,r.Z)({},h,t,{components:i,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"security-changelog"},"Security Changelog"),(0,n.kt)("h2",{id:"fixed-in-clickhouse-release-21-10-2-215-2021-10-18"},"Fixed in ClickHouse 21.10.2.15, 2021-10-18"),(0,n.kt)("h3",{id:"cve-2021-43304"},"CVE-2021-43304"),(0,n.kt)("p",null,"Heap buffer overflow in Clickhouse's LZ4 compression codec when parsing a malicious query. There is no verification that the copy operations in the LZ4::decompressImpl loop and especially the arbitrary copy operation wildCopy<copy_amount>(op, ip, copy_end), don\u2019t exceed the destination buffer\u2019s limits."),(0,n.kt)("p",null,"Credits: JFrog Security Research Team"),(0,n.kt)("h3",{id:"cve-2021-43305"},"CVE-2021-43305"),(0,n.kt)("p",null,"Heap buffer overflow in Clickhouse's LZ4 compression codec when parsing a malicious query. There is no verification that the copy operations in the LZ4::decompressImpl loop and especially the arbitrary copy operation wildCopy<copy_amount>(op, ip, copy_end), don\u2019t exceed the destination buffer\u2019s limits. This issue is very similar to CVE-2021-43304, but the vulnerable copy operation is in a different wildCopy call."),(0,n.kt)("p",null,"Credits: JFrog Security Research Team"),(0,n.kt)("h3",{id:"cve-2021-42387"},"CVE-2021-42387"),(0,n.kt)("p",null,"Heap out-of-bounds read in Clickhouse's LZ4 compression codec when parsing a malicious query. As part of the LZ4::decompressImpl() loop, a 16-bit unsigned user-supplied value ('offset') is read from the compressed data. The offset is later used in the length of a copy operation, without checking the upper bounds of the source of the copy operation."),(0,n.kt)("p",null,"Credits: JFrog Security Research Team"),(0,n.kt)("h3",{id:"cve-2021-42388"},"CVE-2021-42388"),(0,n.kt)("p",null,"Heap out-of-bounds read in Clickhouse's LZ4 compression codec when parsing a malicious query. As part of the LZ4::decompressImpl() loop, a 16-bit unsigned user-supplied value ('offset') is read from the compressed data. The offset is later used in the length of a copy operation, without checking the lower bounds of the source of the copy operation."),(0,n.kt)("p",null,"Credits: JFrog Security Research Team"),(0,n.kt)("h3",{id:"cve-2021-42389"},"CVE-2021-42389"),(0,n.kt)("p",null,"Divide-by-zero in Clickhouse's Delta compression codec when parsing a malicious query. The first byte of the compressed buffer is used in a modulo operation without being checked for 0."),(0,n.kt)("p",null,"Credits: JFrog Security Research Team"),(0,n.kt)("h3",{id:"cve-2021-42390"},"CVE-2021-42390"),(0,n.kt)("p",null,"Divide-by-zero in Clickhouse's DeltaDouble compression codec when parsing a malicious query. The first byte of the compressed buffer is used in a modulo operation without being checked for 0."),(0,n.kt)("p",null,"Credits: JFrog Security Research Team"),(0,n.kt)("h3",{id:"cve-2021-42391"},"CVE-2021-42391"),(0,n.kt)("p",null,"Divide-by-zero in Clickhouse's Gorilla compression codec when parsing a malicious query. The first byte of the compressed buffer is used in a modulo operation without being checked for 0."),(0,n.kt)("p",null,"Credits: JFrog Security Research Team"),(0,n.kt)("h2",{id:"fixed-in-clickhouse-release-21-4-3-21-2021-04-12"},"Fixed in ClickHouse 21.4.3.21, 2021-04-12"),(0,n.kt)("h3",{id:"cve-2021-25263"},"CVE-2021-25263"),(0,n.kt)("p",null,"An attacker that has CREATE DICTIONARY privilege, can read arbitary file outside permitted directory."),(0,n.kt)("p",null,"Fix has been pushed to versions 20.8.18.32-lts, 21.1.9.41-stable, 21.2.9.41-stable, 21.3.6.55-lts, 21.4.3.21-stable and later."),(0,n.kt)("p",null,"Credits: ",(0,n.kt)("a",{parentName:"p",href:"https://twitter.com/vegoshin"},"Vyacheslav Egoshin")),(0,n.kt)("h2",{id:"fixed-in-clickhouse-release-19-14-3-3-2019-09-10"},"Fixed in ClickHouse Release 19.14.3.3, 2019-09-10"),(0,n.kt)("h3",{id:"cve-2019-15024"},"CVE-2019-15024"),(0,n.kt)("p",null,"\u0410n attacker that has write access to ZooKeeper and who can run a custom server available from the network where ClickHouse runs, can create a custom-built malicious server that will act as a ClickHouse replica and register it in ZooKeeper. When another replica will fetch data part from the malicious replica, it can force clickhouse-server to write to arbitrary path on filesystem."),(0,n.kt)("p",null,"Credits: Eldar Zaitov of Yandex Information Security Team"),(0,n.kt)("h3",{id:"cve-2019-16535"},"CVE-2019-16535"),(0,n.kt)("p",null,"\u0410n OOB read, OOB write and integer underflow in decompression algorithms can be used to achieve RCE or DoS via native protocol."),(0,n.kt)("p",null,"Credits: Eldar Zaitov of Yandex Information Security Team"),(0,n.kt)("h3",{id:"cve-2019-16536"},"CVE-2019-16536"),(0,n.kt)("p",null,"Stack overflow leading to DoS can be triggered by a malicious authenticated client."),(0,n.kt)("p",null,"Credits: Eldar Zaitov of Yandex Information Security Team"),(0,n.kt)("h2",{id:"fixed-in-clickhouse-release-19-13-6-1-2019-09-20"},"Fixed in ClickHouse Release 19.13.6.1, 2019-09-20"),(0,n.kt)("h3",{id:"cve-2019-18657"},"CVE-2019-18657"),(0,n.kt)("p",null,"Table function ",(0,n.kt)("inlineCode",{parentName:"p"},"url")," had the vulnerability allowed the attacker to inject arbitrary HTTP headers in the request."),(0,n.kt)("p",null,"Credits: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/NSTikhomirov"},"Nikita Tikhomirov")),(0,n.kt)("h2",{id:"fixed-in-clickhouse-release-18-12-13-2018-09-10"},"Fixed in ClickHouse Release 18.12.13, 2018-09-10"),(0,n.kt)("h3",{id:"cve-2018-14672"},"CVE-2018-14672"),(0,n.kt)("p",null,"Functions for loading CatBoost models allowed path traversal and reading arbitrary files through error messages."),(0,n.kt)("p",null,"Credits: Andrey Krasichkov of Yandex Information Security Team"),(0,n.kt)("h2",{id:"fixed-in-clickhouse-release-18-10-3-2018-08-13"},"Fixed in ClickHouse Release 18.10.3, 2018-08-13"),(0,n.kt)("h3",{id:"cve-2018-14671"},"CVE-2018-14671"),(0,n.kt)("p",null,"unixODBC allowed loading arbitrary shared objects from the file system which led to a Remote Code Execution vulnerability."),(0,n.kt)("p",null,"Credits: Andrey Krasichkov and Evgeny Sidorov of Yandex Information Security Team"),(0,n.kt)("h2",{id:"fixed-in-clickhouse-release-1-1-54388-2018-06-28"},"Fixed in ClickHouse Release 1.1.54388, 2018-06-28"),(0,n.kt)("h3",{id:"cve-2018-14668"},"CVE-2018-14668"),(0,n.kt)("p",null,"\u201cremote\u201d table function allowed arbitrary symbols in \u201cuser\u201d, \u201cpassword\u201d and \u201cdefault_database\u201d fields which led to Cross Protocol Request Forgery Attacks."),(0,n.kt)("p",null,"Credits: Andrey Krasichkov of Yandex Information Security Team"),(0,n.kt)("h2",{id:"fixed-in-clickhouse-release-1-1-54390-2018-07-06"},"Fixed in ClickHouse Release 1.1.54390, 2018-07-06"),(0,n.kt)("h3",{id:"cve-2018-14669"},"CVE-2018-14669"),(0,n.kt)("p",null,"ClickHouse MySQL client had \u201cLOAD DATA LOCAL INFILE\u201d functionality enabled that allowed a malicious MySQL database read arbitrary files from the connected ClickHouse server."),(0,n.kt)("p",null,"Credits: Andrey Krasichkov and Evgeny Sidorov of Yandex Information Security Team"),(0,n.kt)("h2",{id:"fixed-in-clickhouse-release-1-1-54131-2017-01-10"},"Fixed in ClickHouse Release 1.1.54131, 2017-01-10"),(0,n.kt)("h3",{id:"cve-2018-14670"},"CVE-2018-14670"),(0,n.kt)("p",null,"Incorrect configuration in deb package could lead to the unauthorized use of the database."),(0,n.kt)("p",null,"Credits: the UK\u2019s National Cyber Security Centre (NCSC)"))}p.isMDXComponent=!0}}]);